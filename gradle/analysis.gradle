apply plugin: 'com.github.spotbugs'
spotbugs {
    toolVersion = tools.spotbugs
    ignoreFailures = true
    effort = 'default'
    reportLevel = 'medium'
    jvmArgs = ['-Xmx1g']
    excludeFilter = file("${project.rootDir}/gradle/spotbugs-filter.xml")
}

apply plugin: "jacoco"
jacoco {
    toolVersion = tools.jacoco
    reportsDir = file("$buildDir/reports/jacoco")
}
jacocoTestReport {
    classDirectories.from = fileTree(
        dir: "${buildDir}/classes",
        excludes: ['**/Manifest*.*']
    )
    reports {
        xml.enabled  = true
        html.enabled = true
    }
}
test {
    jacoco {
        // https://github.com/gradle/gradle/issues/5184#issuecomment-391982009
        includeNoLocationClasses = true
        excludes = ['jdk.internal.*']
    }
}


apply plugin: 'pmd'
pmd {
    toolVersion = tools.pmd
    ignoreFailures = true
    rulePriority = 3
    ruleSets = []
    ruleSetFiles = files("${project.rootDir}/gradle/pmd-rules.xml")
    reportsDir = file("$buildDir/reports/pmd")
}
tasks.withType(Pmd) {
    reports {
        xml.enabled  = true
        html.enabled = true
    }
}


apply plugin: 'org.sonarqube'
sonarqube {
    properties {
        property 'sonar.login', System.getenv('SONAR_LOGIN')
        property 'sonar.projectKey', System.getenv('SONAR_KEY')
        property 'sonar.organization', System.getenv('SONAR_ORG')

        property 'sonar.verbose', 'true'
        property 'sonar.sourceEncoding', 'UTF-8'
        property 'sonar.exclusions', '**/*.xml, **/*.js, **/*.css, **/*.sql, **/*.html'
        property 'sonar.host.url', 'https://sonarcloud.io'

        property 'sonar.java.pmd.reportPaths', "$buildDir/reports/pmd/main.xml"
        property 'sonar.java.spotbugs.reportPaths', "$buildDir/reports/spotbugs/main.xml"
        property 'sonar.coverage.jacoco.xmlReportPaths', "$buildDir/reports/jacoco/test/jacocoTestReport.xml"
    }
}
